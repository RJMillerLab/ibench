<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- generated by JRat 'call tree' 1.27 provider on Fri Nov 16 18:18:08 CST 2012-->
<jrat-tree viewer="org.shiftone.jrat.provider.tree.ui.TreeOutputXmlViewBuilder">
<view>
<call c="tresc.benchmark.STBenchmark" m="main" s="([Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="13555000000" sos="183738025" mct="1" min="13555000000" max="13555000000">
<call c="tresc.benchmark.STBenchmark" m="run" s="([Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="10394000000" sos="108035236" mct="1" min="10394000000" max="10394000000">
<call c="tresc.benchmark.Configuration" m="toString" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$DESErrorType" m="values" s="()[Ltresc/benchmark/Constants$DESErrorType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$ScenarioName" m="values" s="()[Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$TrampXMLOutputSwitch" m="values" s="()[Ltresc/benchmark/Constants$TrampXMLOutputSwitch;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$OutputOption" m="values" s="()[Ltresc/benchmark/Constants$OutputOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$ParameterName" m="values" s="()[Ltresc/benchmark/Constants$ParameterName;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.STBenchmark" m="runConfig" s="()V" ent="1" xit="1" err="0" dur="10359000000" sos="107308881" mct="1" min="10359000000" max="10359000000">
<call c="tresc.benchmark.Constants$ScenarioName" m="values" s="()[Ltresc/benchmark/Constants$ScenarioName;" ent="41" xit="41" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getSchemaFile" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Generator" m="generateScenario" s="(Ltresc/benchmark/Configuration;)Lsmark/support/MappingScenario;" ent="1" xit="1" err="0" dur="7329000000" sos="53714241" mct="1" min="7329000000" max="7329000000">
<call c="tresc.benchmark.schemaGen.NestingScenarioGenerator" m="generateScenario" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="scenarioSanityCheck" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTransformation" s="()Lvtools/dataModel/expression/SPJQuery;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getDeviation" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="8" xit="8" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getScenarioRepetitions" s="(I)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.NestingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMapType" s="()Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="generateScenario" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;)V" ent="1" xit="1" err="0" dur="1112000000" sos="1236544" mct="1" min="1112000000" max="1112000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="generateRandomFDs" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;Ljava/util/Random;Ljava/util/Map;)V" ent="1" xit="1" err="0" dur="698000000" sos="487204" mct="1" min="698000000" max="698000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="addFD" s="(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z" ent="824" xit="824" err="0" dur="67000000" sos="2959" mct="1" min="0" max="54000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator$FD" m="toString" s="()Ljava/lang/String;" ent="1644" xit="1644" err="0" dur="59000000" sos="2921" mct="1" min="0" max="54000000"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="824" xit="824" err="0" dur="13000000" sos="109" mct="1" min="0" max="10000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="sizeOfAttrArray" s="()I" ent="188" xit="188" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;[IZ)[Ljava/lang/String;" ent="40" xit="40" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="40" xit="40" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="361" xit="361" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="361" xit="361" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getPK" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="188" xit="188" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="getAttrArray" s="()[Ljava/lang/String;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="188" xit="188" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000"/>
</call>
<call c="org.vagabond.util.CollectionUtils" m="createSequence" s="(II)[I" ent="188" xit="188" err="0" dur="5000000" sos="11" mct="1" min="0" max="3000000"/>
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="getNonKeyAttributes" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="58000000" sos="868" mct="1" min="0" max="25000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="stripOutPKPositions" s="(I[I[I)[I" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;[IZ)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="18000000" sos="228" mct="1" min="0" max="15000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="1174" xit="1174" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="1174" xit="1174" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="296" xit="296" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getPKPos" s="(Ljava/lang/String;Z)[I" ent="148" xit="148" err="0" dur="10000000" sos="10" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="getAttrArray" s="()[Ljava/lang/String;" ent="148" xit="148" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="sizeOfAttrArray" s="()I" ent="148" xit="148" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="1391" xit="1391" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="296" xit="296" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="1835" xit="1835" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addFD" s="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/vagabond/xmlmodel/FDType;" ent="820" xit="820" err="0" dur="63000000" sos="85" mct="1" min="0" max="3000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="820" xit="820" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="820" xit="820" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="820" xit="820" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="820" xit="820" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="820" xit="820" err="0" dur="11000000" sos="13" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="getTo" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="820" xit="820" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="820" xit="820" err="0" dur="8000000" sos="10" mct="1" min="0" max="2000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="820" xit="820" err="0" dur="8000000" sos="10" mct="1" min="0" max="2000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="820" xit="820" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="1640" xit="1640" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="820" xit="820" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="820" xit="820" err="0" dur="9000000" sos="11" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="3612" xit="3612" err="0" dur="8000000" sos="10" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="820" xit="820" err="0" dur="5000000" sos="11" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="820" xit="820" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewFD" s="()Lorg/vagabond/xmlmodel/FDType;" ent="820" xit="820" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="getFrom" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="2792" xit="2792" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="188" xit="188" err="0" dur="11000000" sos="43" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="188" xit="188" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="188" xit="188" err="0" dur="40000000" sos="1446" mct="1" min="0" max="38000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="sizeOfAttrArray" s="()I" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="1752" xit="1752" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomWithoutReplacementSequence" s="(Ljava/util/Random;I[Ljava/lang/String;)Ljava/util/Vector;" ent="884" xit="884" err="0" dur="176000000" sos="7396" mct="1" min="0" max="80000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomWithoutReplacementSequence" s="(Ljava/util/Random;ILjava/util/Vector;)Ljava/util/Vector;" ent="884" xit="884" err="0" dur="172000000" sos="7392" mct="1" min="0" max="80000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="3602" xit="3602" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.util.CollectionUtils" m="makeVec" s="([Ljava/lang/Object;)Ljava/util/Vector;" ent="884" xit="884" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="820" xit="820" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="3068" xit="3068" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="getRelationArray" s="()[Lorg/vagabond/xmlmodel/RelationType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.CollectionUtils" m="makeSet" s="([Ljava/lang/Object;)Ljava/util/Set;" ent="1652" xit="1652" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="417" xit="417" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSchema" s="(Z)Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="generatePKFDs" s="(Lsmark/support/MappingScenario;Ljava/util/Map;)V" ent="1" xit="1" err="0" dur="414000000" sos="171396" mct="1" min="414000000" max="414000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="addFD" s="(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Z" ent="148" xit="148" err="0" dur="28000000" sos="678" mct="1" min="0" max="26000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator$FD" m="toString" s="()Ljava/lang/String;" ent="296" xit="296" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getPK" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="getAttrArray" s="()[Ljava/lang/String;" ent="148" xit="148" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="592" xit="592" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="getNonKeyAttributes" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="52000000" sos="1182" mct="1" min="0" max="34000000">
<call c="tresc.benchmark.schemaGen.SourceFDGenerator" m="stripOutPKPositions" s="(I[I[I)[I" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;[IZ)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="1174" xit="1174" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="1174" xit="1174" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="296" xit="296" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getPKPos" s="(Ljava/lang/String;Z)[I" ent="148" xit="148" err="0" dur="9000000" sos="17" mct="1" min="0" max="3000000">
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="getAttrArray" s="()[Ljava/lang/String;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="148" xit="148" err="0" dur="9000000" sos="17" mct="1" min="0" max="3000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="sizeOfAttrArray" s="()I" ent="148" xit="148" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="1391" xit="1391" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="296" xit="296" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="1835" xit="1835" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="getRelationArray" s="()[Lorg/vagabond/xmlmodel/RelationType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addFD" s="(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Lorg/vagabond/xmlmodel/FDType;" ent="148" xit="148" err="0" dur="204000000" sos="38816" mct="1" min="0" max="197000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="getTo" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="1174" xit="1174" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="148" xit="148" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="296" xit="296" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="1391" xit="1391" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="148" xit="148" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewFD" s="()Lorg/vagabond/xmlmodel/FDType;" ent="148" xit="148" err="0" dur="198000000" sos="38810" mct="1" min="0" max="197000000"/>
<call c="org.vagabond.xmlmodel.impl.FDTypeImpl" m="getFrom" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="217" xit="217" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="149" xit="149" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSchema" s="(Z)Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="initDoc" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="addNewSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="addNewTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="addNewMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="init" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="addNewMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="addNewSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.MappingScenarioDocument$Factory" m="newInstance" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.MappingScenario" m="setDocFac" s="(Lorg/vagabond/benchmark/model/TrampModelFactory;Ltresc/benchmark/Configuration;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="initAllElem" s="(Ltresc/benchmark/Configuration;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Configuration" m="getTrampXMLOutputOption" s="(Ltresc/benchmark/Constants$TrampXMLOutputSwitch;)Z" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="init" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="initIndex" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.explanation.model.ExplanationFactory" m="newExplanationSet" s="()Lorg/vagabond/explanation/model/IExplanationSet;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.explanation.model.SimpleExplanationSet" m="init" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.explanation.marker.MarkerFactory" m="newMarkerSet" s="()Lorg/vagabond/explanation/marker/IMarkerSet;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.Configuration" m="getTrampXMLOutputOption" s="(Ltresc/benchmark/Constants$TrampXMLOutputSwitch;)Z" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="generateScenario" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;)V" ent="17" xit="17" err="0" dur="3745000000" sos="1965033" mct="1" min="0" max="814000000">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="scenarioSanityCheck" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTransformation" s="()Lvtools/dataModel/expression/SPJQuery;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getDeviation" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="8" xit="8" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getScenarioRepetitions" s="(I)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMapType" s="()Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.ValueManagementScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.ValueManagementScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getDeviation" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="120" xit="120" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getScenarioRepetitions" s="(I)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMapType" s="()Ltresc/benchmark/Constants$MappingLanguageType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="scenarioSanityCheck" s="()V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.FlatteningScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="180" xit="180" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTransformation" s="()Lvtools/dataModel/expression/SPJQuery;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.ValueGenerationScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.FlatteningScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="createOneInstanceOfScenario" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;)V" ent="140" xit="140" err="0" dur="3743000000" sos="437595" mct="1" min="1000000" max="409000000">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="26000000" sos="176" mct="1" min="1000000" max="12000000">
<call c="smark.support.PartialMapping" m="getCorrs" s="(IZ)Ljava/util/List;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="23000000" sos="121" mct="1" min="0" max="10000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="19000000" sos="111" mct="1" min="0" max="10000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="30" xit="30" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="3890" xit="3890" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="303" xit="303" err="0" dur="12000000" sos="102" mct="1" min="0" max="10000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="20" xit="20" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="2590" xit="2590" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="114" xit="114" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.util.CollectionUtils" m="concatArrays" s="([[Ljava/lang/String;)[Ljava/lang/String;" ent="50" xit="50" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="50" xit="50" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="264" xit="264" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="30" xit="30" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;III)V" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="2045" xit="2045" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="60" xit="60" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="204" xit="204" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="15000000" sos="41" mct="1" min="0" max="5000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1945" xit="1945" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;III[Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="4000000" sos="10" mct="1" min="0" max="3000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;Ljava/lang/String;)V" ent="46" xit="46" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="187" xit="187" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="46" xit="46" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="46" xit="46" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="46" xit="46" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="46" xit="46" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="46" xit="46" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="187" xit="187" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="38" xit="38" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="160" xit="160" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getMaps" s="()Ljava/util/List;" ent="140" xit="140" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="getSourceRels" s="()Ljava/util/List;" ent="140" xit="140" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getTrampXMLOutputOption" s="(Ltresc/benchmark/Constants$TrampXMLOutputSwitch;)Z" ent="280" xit="280" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="32000000" sos="222" mct="1" min="1000000" max="13000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumNormalAttrs" s="(I)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.CollectionUtils" m="concat" s="([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.CollectionUtils" m="concatArrays" s="([[Ljava/lang/String;)[Ljava/lang/String;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="25" xit="25" err="0" dur="14000000" sos="14" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="25" xit="25" err="0" dur="13000000" sos="13" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="25" xit="25" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1213" xit="1213" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="233" xit="233" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getNumRelAttr" s="(IZ)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="14000000" sos="124" mct="1" min="0" max="11000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="14000000" sos="124" mct="1" min="0" max="11000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="485" xit="485" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="216" xit="216" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="216" xit="216" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getTargetRels" s="()Ljava/util/List;" ent="140" xit="140" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="genSchemas" s="()V" ent="140" xit="140" err="0" dur="1509000000" sos="108941" mct="1" min="0" max="207000000">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="30000000" sos="112" mct="1" min="1000000" max="6000000">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="addFKs" s="()V" ent="10" xit="10" err="0" dur="15000000" sos="35" mct="1" min="0" max="4000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(IIIIZ)V" ent="36" xit="36" err="0" dur="13000000" sos="31" mct="1" min="0" max="4000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" ent="36" xit="36" err="0" dur="7000000" sos="13" mct="1" min="0" max="3000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="36" xit="36" err="0" dur="7000000" sos="13" mct="1" min="0" max="3000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="72" xit="72" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="72" xit="72" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="72" xit="72" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="36" xit="36" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="36" xit="36" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="72" xit="72" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="72" xit="72" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="72" xit="72" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="72" xit="72" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="72" xit="72" err="0" dur="6000000" sos="18" mct="1" min="0" max="4000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="72" xit="72" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="72" xit="72" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getNumRelAttr" s="(IZ)I" ent="36" xit="36" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="36" xit="36" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;Ljava/lang/String;Z)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="83" xit="83" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="83" xit="83" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="103" xit="103" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="9000000" sos="29" mct="1" min="0" max="5000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="9000000" sos="29" mct="1" min="0" max="5000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="111" xit="111" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="111" xit="111" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="139" xit="139" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="139" xit="139" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="139" xit="139" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="139" xit="139" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="139" xit="139" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="111" xit="111" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="111" xit="111" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="102" xit="102" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="102" xit="102" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="102" xit="102" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="102" xit="102" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="102" xit="102" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="97" xit="97" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="97" xit="97" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="97" xit="97" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="97" xit="97" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="97" xit="97" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="32000000" sos="320" mct="1" min="1000000" max="17000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="142" xit="142" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="142" xit="142" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="142" xit="142" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="142" xit="142" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="142" xit="142" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="7000000" sos="15" mct="1" min="0" max="3000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="7000000" sos="15" mct="1" min="0" max="3000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="4000000" sos="8" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="137" xit="137" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="137" xit="137" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="137" xit="137" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="137" xit="137" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="137" xit="137" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="127" xit="127" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="8000000" sos="8" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="98" xit="98" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="98" xit="98" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="98" xit="98" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="98" xit="98" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="98" xit="98" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="83" xit="83" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="83" xit="83" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="93" xit="93" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="93" xit="93" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="93" xit="93" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="93" xit="93" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="93" xit="93" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="83" xit="83" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="83" xit="83" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="65000000" sos="691" mct="1" min="2000000" max="16000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="20000000" sos="204" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="15000000" sos="197" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="15000000" sos="197" mct="1" min="0" max="14000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="15000000" sos="197" mct="1" min="0" max="14000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="15000000" sos="197" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="15000000" sos="197" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="15000000" sos="197" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="14000000" sos="170" mct="1" min="0" max="13000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="94" xit="94" err="0" dur="14000000" sos="170" mct="1" min="0" max="13000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="getSourceRels" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="24000000" sos="80" mct="1" min="1000000" max="6000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="24000000" sos="80" mct="1" min="1000000" max="6000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="7000000" sos="27" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="94" xit="94" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="94" xit="94" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="94" xit="94" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="94" xit="94" err="0" dur="5000000" sos="11" mct="1" min="0" max="3000000"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="208" xit="208" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000"/>
</call>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="38000000" sos="518" mct="1" min="0" max="21000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="6" xit="6" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="88" xit="88" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="88" xit="88" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="88" xit="88" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="88" xit="88" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="88" xit="88" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="org.vagabond.util.CollectionUtils" m="createSequence" s="(II)[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="34000000" sos="512" mct="1" min="0" max="21000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="34000000" sos="512" mct="1" min="0" max="21000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="21000000" sos="441" mct="1" min="0" max="21000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="21000000" sos="441" mct="1" min="0" max="21000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="101" xit="101" err="0" dur="9000000" sos="65" mct="1" min="0" max="8000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="101" xit="101" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="111" xit="111" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="111" xit="111" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="111" xit="111" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="111" xit="111" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="111" xit="111" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="101" xit="101" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="101" xit="101" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="12000000" sos="18" mct="1" min="0" max="2000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="11000000" sos="15" mct="1" min="0" max="2000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="11000000" sos="15" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="191" xit="191" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="191" xit="191" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="201" xit="201" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="201" xit="201" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="201" xit="201" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="201" xit="201" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="201" xit="201" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="191" xit="191" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="191" xit="191" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="14000000" sos="64" mct="1" min="0" max="6000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="4000000" sos="16" mct="1" min="0" max="4000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="4000000" sos="16" mct="1" min="0" max="4000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="123" xit="123" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="123" xit="123" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="123" xit="123" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="123" xit="123" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="123" xit="123" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="108" xit="108" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="108" xit="108" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="118" xit="118" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="118" xit="118" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="118" xit="118" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="118" xit="118" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="118" xit="118" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="108" xit="108" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="108" xit="108" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="13000000" sos="85" mct="1" min="0" max="9000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="8" xit="8" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="95" xit="95" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="115" xit="115" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="9000000" sos="65" mct="1" min="0" max="8000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="9000000" sos="65" mct="1" min="0" max="8000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="85" xit="85" err="0" dur="7000000" sos="49" mct="1" min="0" max="7000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="85" xit="85" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="85" xit="85" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="85" xit="85" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="17000000" sos="53" mct="1" min="0" max="6000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="20" xit="20" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="26" xit="26" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(I[Ljava/lang/String;I[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="20" xit="20" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="20" xit="20" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="20" xit="20" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="114" xit="114" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="114" xit="114" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="134" xit="134" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="134" xit="134" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="134" xit="134" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="134" xit="134" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="134" xit="134" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="114" xit="114" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="114" xit="114" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="114" xit="114" err="0" dur="6000000" sos="18" mct="1" min="0" max="4000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="114" xit="114" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="114" xit="114" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="70000000" sos="2414" mct="1" min="0" max="46000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="42" xit="42" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="42" xit="42" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="42" xit="42" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="126" xit="126" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="126" xit="126" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="126" xit="126" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="126" xit="126" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="126" xit="126" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="48000000" sos="1078" mct="1" min="0" max="28000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="48000000" sos="1078" mct="1" min="0" max="28000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="105" xit="105" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="105" xit="105" err="0" dur="25000000" sos="625" mct="1" min="0" max="25000000"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="115" xit="115" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="115" xit="115" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="115" xit="115" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="115" xit="115" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="115" xit="115" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="105" xit="105" err="0" dur="17000000" sos="289" mct="1" min="0" max="17000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="153000000" sos="6797" mct="1" min="2000000" max="64000000">
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumNormalAttrs" s="(I)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[IZ)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="34" xit="34" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="34" xit="34" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="34" xit="34" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="17" xit="17" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.util.CollectionUtils" m="createSequence" s="(II)[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getTargetNumJoinAttrs" s="()I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="87000000" sos="4221" mct="1" min="1000000" max="64000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="87000000" sos="4221" mct="1" min="1000000" max="64000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="216" xit="216" err="0" dur="7000000" sos="19" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="216" xit="216" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="226" xit="226" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="226" xit="226" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="226" xit="226" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="226" xit="226" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="226" xit="226" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="216" xit="216" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="216" xit="216" err="0" dur="70000000" sos="3732" mct="1" min="0" max="61000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="216" xit="216" err="0" dur="16000000" sos="148" mct="1" min="0" max="12000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="216" xit="216" err="0" dur="16000000" sos="148" mct="1" min="0" max="12000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="216" xit="216" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="248000000" sos="27050" mct="1" min="2000000" max="159000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createConstraints" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="177000000" sos="24319" mct="1" min="0" max="155000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createChainConstraints" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="174000000" sos="24316" mct="1" min="0" max="155000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinRefs" s="(I[[Ljava/lang/String;)[Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(I[Ljava/lang/String;I[Ljava/lang/String;Z)V" ent="15" xit="15" err="0" dur="174000000" sos="23976" mct="1" min="0" max="154000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="15" xit="15" err="0" dur="174000000" sos="23976" mct="1" min="0" max="154000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="15" xit="15" err="0" dur="8000000" sos="64" mct="1" min="0" max="8000000"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="15" xit="15" err="0" dur="146000000" sos="21026" mct="1" min="0" max="145000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="18000000" sos="258" mct="1" min="0" max="16000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="34" xit="34" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinAttrs" s="(I[[Ljava/lang/String;)[Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createPKs" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasPK" s="(Ljava/lang/String;Z)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="15" xit="15" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="17" xit="17" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="34" xit="34" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="34" xit="34" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="34" xit="34" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="4" xit="4" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="17" xit="17" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinAttrs" s="(I[[Ljava/lang/String;)[Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="210" xit="210" err="0" dur="20000000" sos="326" mct="1" min="0" max="18000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="210" xit="210" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="210" xit="210" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="210" xit="210" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="210" xit="210" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createJoinAttrs" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createChainJoinAttrs" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinAttr" s="(II)Ljava/lang/String;" ent="17" xit="17" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinRef" s="(II)Ljava/lang/String;" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="25" xit="25" err="0" dur="47000000" sos="353" mct="1" min="0" max="15000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="25" xit="25" err="0" dur="46000000" sos="350" mct="1" min="0" max="15000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="25" xit="25" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="25" xit="25" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="233" xit="233" err="0" dur="22000000" sos="204" mct="1" min="0" max="14000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="233" xit="233" err="0" dur="14000000" sos="86" mct="1" min="0" max="9000000"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="25" xit="25" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="258" xit="258" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="258" xit="258" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="258" xit="258" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="258" xit="258" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="258" xit="258" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="233" xit="233" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="25" xit="25" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="233" xit="233" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="9000000" sos="9" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="42" xit="42" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="42" xit="42" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="42" xit="42" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="21" xit="21" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="17" xit="17" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="21" xit="21" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="105" xit="105" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="125" xit="125" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="135" xit="135" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="135" xit="135" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="145" xit="145" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="145" xit="145" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="145" xit="145" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="145" xit="145" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="145" xit="145" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="135" xit="135" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="135" xit="135" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="50000000" sos="634" mct="1" min="1000000" max="21000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="43000000" sos="581" mct="1" min="1000000" max="21000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="43000000" sos="581" mct="1" min="1000000" max="21000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="114" xit="114" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="10000000" sos="100" mct="1" min="0" max="10000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="114" xit="114" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="124" xit="124" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="124" xit="124" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="124" xit="124" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="124" xit="124" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="124" xit="124" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="114" xit="114" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="114" xit="114" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="94" xit="94" err="0" dur="7000000" sos="37" mct="1" min="0" max="6000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="94" xit="94" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="94" xit="94" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="96000000" sos="1988" mct="1" min="1000000" max="38000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="97" xit="97" err="0" dur="10000000" sos="66" mct="1" min="0" max="8000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="97" xit="97" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="97" xit="97" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="97" xit="97" err="0" dur="9000000" sos="65" mct="1" min="0" max="8000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="97" xit="97" err="0" dur="9000000" sos="65" mct="1" min="0" max="8000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="73000000" sos="1693" mct="1" min="0" max="38000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="107" xit="107" err="0" dur="19000000" sos="105" mct="1" min="0" max="8000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="107" xit="107" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="4000000" sos="10" mct="1" min="0" max="3000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="117" xit="117" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="117" xit="117" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="117" xit="117" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="117" xit="117" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="117" xit="117" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="107" xit="107" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="107" xit="107" err="0" dur="43000000" sos="1303" mct="1" min="0" max="36000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="47000000" sos="321" mct="1" min="1000000" max="12000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="27" xit="27" err="0" dur="10000000" sos="12" mct="1" min="0" max="2000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="27" xit="27" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="54" xit="54" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="54" xit="54" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="54" xit="54" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="54" xit="54" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="27" xit="27" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="54" xit="54" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="54" xit="54" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="54" xit="54" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="27" xit="27" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="27" xit="27" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="191" xit="191" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="191" xit="191" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="191" xit="191" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="191" xit="191" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="191" xit="191" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="27" xit="27" err="0" dur="35000000" sos="143" mct="1" min="0" max="8000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="27" xit="27" err="0" dur="35000000" sos="143" mct="1" min="0" max="8000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="27" xit="27" err="0" dur="8000000" sos="34" mct="1" min="0" max="5000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="27" xit="27" err="0" dur="8000000" sos="34" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="208" xit="208" err="0" dur="7000000" sos="9" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="27" xit="27" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="208" xit="208" err="0" dur="9000000" sos="29" mct="1" min="0" max="5000000"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="27" xit="27" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="235" xit="235" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="235" xit="235" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="235" xit="235" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="235" xit="235" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="235" xit="235" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="208" xit="208" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="208" xit="208" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="274000000" sos="30986" mct="1" min="1000000" max="167000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="63000000" sos="2947" mct="1" min="0" max="54000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="6000000" sos="18" mct="1" min="0" max="4000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="27000000" sos="677" mct="1" min="0" max="26000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="4000000" sos="10" mct="1" min="0" max="3000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="21000000" sos="401" mct="1" min="0" max="20000000"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="114" xit="114" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="114" xit="114" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="114" xit="114" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="114" xit="114" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="114" xit="114" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="207000000" sos="15393" mct="1" min="1000000" max="112000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="207000000" sos="15393" mct="1" min="1000000" max="112000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="61000000" sos="3721" mct="1" min="0" max="61000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="5000000" sos="25" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="94" xit="94" err="0" dur="7000000" sos="9" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="22000000" sos="442" mct="1" min="0" max="21000000"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="94" xit="94" err="0" dur="65000000" sos="1885" mct="1" min="0" max="40000000"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="94" xit="94" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="94" xit="94" err="0" dur="40000000" sos="816" mct="1" min="0" max="28000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="16000000" sos="36" mct="1" min="0" max="4000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;Ljava/lang/String;Z)V" ent="28" xit="28" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="28" xit="28" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="28" xit="28" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="56" xit="56" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="addFKs" s="()V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(IIIIZ)V" ent="18" xit="18" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" ent="18" xit="18" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="18" xit="18" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="36" xit="36" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getNumRelAttr" s="(IZ)I" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="80" xit="80" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="100" xit="100" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="126" xit="126" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="126" xit="126" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="28" xit="28" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="154" xit="154" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="154" xit="154" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="126" xit="126" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="126" xit="126" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="80" xit="80" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="90" xit="90" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="90" xit="90" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="90" xit="90" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="90" xit="90" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="90" xit="90" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="80" xit="80" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="80000000" sos="1354" mct="1" min="2000000" max="31000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="28" xit="28" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="147" xit="147" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000"/>
</call>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="addFKs" s="()V" ent="10" xit="10" err="0" dur="13000000" sos="57" mct="1" min="0" max="7000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(IIIIZ)V" ent="29" xit="29" err="0" dur="13000000" sos="45" mct="1" min="0" max="6000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" ent="29" xit="29" err="0" dur="9000000" sos="39" mct="1" min="0" max="6000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="29" xit="29" err="0" dur="9000000" sos="39" mct="1" min="0" max="6000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="58" xit="58" err="0" dur="7000000" sos="37" mct="1" min="0" max="6000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="58" xit="58" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="58" xit="58" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="58" xit="58" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="58" xit="58" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="35000000" sos="791" mct="1" min="0" max="28000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="35000000" sos="791" mct="1" min="0" max="28000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="28" xit="28" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="156" xit="156" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="156" xit="156" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="184" xit="184" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="184" xit="184" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="184" xit="184" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="184" xit="184" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="184" xit="184" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="156" xit="156" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="156" xit="156" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="22000000" sos="58" mct="1" min="1000000" max="4000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="18" xit="18" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="36" xit="36" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="18" xit="18" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="112" xit="112" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="112" xit="112" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="112" xit="112" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="112" xit="112" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="112" xit="112" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="15000000" sos="29" mct="1" min="1000000" max="3000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="15000000" sos="29" mct="1" min="1000000" max="3000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="94" xit="94" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="94" xit="94" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="104" xit="104" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="94" xit="94" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="94" xit="94" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="17000000" sos="33" mct="1" min="1000000" max="3000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="194" xit="194" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="194" xit="194" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="194" xit="194" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="194" xit="194" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="194" xit="194" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createChainConstraints" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinRefs" s="(I[[Ljava/lang/String;)[Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(I[Ljava/lang/String;I[Ljava/lang/String;Z)V" ent="16" xit="16" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="32" xit="32" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="32" xit="32" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="16" xit="16" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="16" xit="16" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="32" xit="32" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="32" xit="32" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="32" xit="32" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="32" xit="32" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinAttrs" s="(I[[Ljava/lang/String;)[Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="26" xit="26" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="26" xit="26" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="26" xit="26" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="230" xit="230" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="230" xit="230" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="26" xit="26" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="256" xit="256" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="256" xit="256" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="256" xit="256" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="256" xit="256" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="256" xit="256" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="230" xit="230" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="230" xit="230" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createChainJoinAttrs" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinAttr" s="(II)Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinRef" s="(II)Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="createPKs" s="([[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasPK" s="(Ljava/lang/String;Z)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="16" xit="16" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="32" xit="32" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="16" xit="16" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="32" xit="32" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="32" xit="32" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="32" xit="32" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getJoinAttrs" s="(I[[Ljava/lang/String;)[Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="27000000" sos="301" mct="1" min="1000000" max="17000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;Ljava/lang/String;Z)V" ent="20" xit="20" err="0" dur="15000000" sos="107" mct="1" min="0" max="10000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="20" xit="20" err="0" dur="15000000" sos="107" mct="1" min="0" max="10000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="11000000" sos="101" mct="1" min="0" max="10000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="11000000" sos="101" mct="1" min="0" max="10000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="11000000" sos="101" mct="1" min="0" max="10000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="11000000" sos="101" mct="1" min="0" max="10000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="addFKs" s="()V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="addFK" s="(IIIIZ)V" ent="20" xit="20" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeignKey" s="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ForeignKey" m="addFKeyAttr" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Rule" m="addRightTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewFrom" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewForeignKey" s="()Lorg/vagabond/xmlmodel/ForeignKeyType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrRefTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.ForeignKeyTypeImpl" m="addNewTo" s="()Lorg/vagabond/xmlmodel/AttrRefType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="40" xit="40" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getNumRelAttr" s="(IZ)I" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="87" xit="87" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="87" xit="87" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="107" xit="107" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="30" xit="30" err="0" dur="8000000" sos="20" mct="1" min="0" max="4000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="30" xit="30" err="0" dur="8000000" sos="20" mct="1" min="0" max="4000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="30" xit="30" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="157" xit="157" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="157" xit="157" err="0" dur="4000000" sos="16" mct="1" min="0" max="4000000">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="157" xit="157" err="0" dur="4000000" sos="16" mct="1" min="0" max="4000000">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="157" xit="157" err="0" dur="4000000" sos="16" mct="1" min="0" max="4000000"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="157" xit="157" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="127" xit="127" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="10000000" sos="14" mct="1" min="0" max="2000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="108" xit="108" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="108" xit="108" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="128" xit="128" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="128" xit="128" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="128" xit="128" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="138" xit="138" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="138" xit="138" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="138" xit="138" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="138" xit="138" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="138" xit="138" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="128" xit="128" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="128" xit="128" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="129000000" sos="4653" mct="1" min="1000000" max="58000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="getSourceRels" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="getAttrIds" s="(IZ)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="8000000" sos="10" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="107" xit="107" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="107" xit="107" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="127" xit="127" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="23" xit="23" err="0" dur="121000000" sos="2791" mct="1" min="0" max="39000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="23" xit="23" err="0" dur="121000000" sos="2791" mct="1" min="0" max="39000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="23" xit="23" err="0" dur="5000000" sos="17" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="23" xit="23" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="23" xit="23" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="23" xit="23" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="208" xit="208" err="0" dur="50000000" sos="1330" mct="1" min="0" max="36000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="23" xit="23" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="208" xit="208" err="0" dur="32000000" sos="684" mct="1" min="0" max="26000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="23" xit="23" err="0" dur="17000000" sos="227" mct="1" min="0" max="15000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="231" xit="231" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="231" xit="231" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="208" xit="208" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="208" xit="208" err="0" dur="11000000" sos="13" mct="1" min="0" max="2000000"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="genSourceRels" s="()V" ent="10" xit="10" err="0" dur="7000000" sos="27" mct="1" min="0" max="5000000">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="15" xit="15" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="8" xit="8" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="15" xit="15" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="110" xit="110" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="110" xit="110" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="110" xit="110" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="110" xit="110" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="110" xit="110" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="6000000" sos="26" mct="1" min="0" max="5000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="6000000" sos="26" mct="1" min="0" max="5000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSourceRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addSourceRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="105" xit="105" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="105" xit="105" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="genTargetRels" s="()V" ent="10" xit="10" err="0" dur="15000000" sos="75" mct="1" min="0" max="8000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumNormalAttrs" s="(I)I" ent="42" xit="42" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="42" xit="42" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getRelHook" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomAttrName" s="(II)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[IZ)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addPrimaryKey" s="(Ljava/lang/String;[Ljava/lang/String;Z)Lvtools/dataModel/expression/Key;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Key" m="addKeyAttr" s="(Lvtools/dataModel/expression/Path;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="52" xit="52" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="addLeftConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Rule" m="addConjunct" s="(Lvtools/dataModel/expression/BooleanExpression;Lvtools/dataModel/expression/BooleanExpression;)Lvtools/dataModel/expression/BooleanExpression;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="22" xit="22" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="setEqualElement" s="(Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Variable" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="clone" s="()Lvtools/dataModel/expression/Variable;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Key" m="addLeftTerm" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Path;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="getRoot" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="clone" s="()Lvtools/dataModel/expression/Projection;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Root" m="clone" s="()Lvtools/dataModel/expression/Root;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Path" m="clone" s="()Lvtools/dataModel/expression/Path;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="clone" s="()Lvtools/dataModel/expression/ValueExpression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="clone" s="()Lvtools/dataModel/expression/Expression;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="clone" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="add" s="(Lvtools/dataModel/expression/Variable;Lvtools/dataModel/expression/Expression;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="add" s="(Ljava/lang/Object;Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vindexOf" s="(Ljava/util/Vector;Ljava/lang/Object;)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="addAttr" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Schema" m="addConstraint" s="(Lvtools/dataModel/expression/Rule;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.util.CollectionUtils" m="createSequence" s="(II)[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getTargetNumJoinAttrs" s="()I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="randomRelName" s="(I)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="hasRelName" s="(Ljava/lang/String;)Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="getStamp" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.data.NameFactory" m="getSafeRandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.data.NameFactory" m="getARandomName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="addNewRelation" s="()Lorg/vagabond/xmlmodel/RelationType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addToIndex" s="(Lorg/vagabond/xmlmodel/RelationType;Z)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.IdMap" m="put" s="(ILjava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getTargetRels" s="()Ljava/util/Map;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelPos" s="()Lorg/vagabond/util/IdMap;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setDataType" s="(Ljava/lang/String;)V" ent="234" xit="234" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addTargetRel" s="(Lorg/vagabond/xmlmodel/RelationType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="addNewAttr" s="()Lorg/vagabond/xmlmodel/AttrDefType;" ent="234" xit="234" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSTRelation" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Z)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.VObject" m="setHook" s="(Ljava/lang/Object;)V" ent="244" xit="244" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;)V" ent="244" xit="244" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.schema.Element" m="addSubElement" s="(Lvtools/dataModel/schema/Element;Z)V" ent="244" xit="244" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.types.Structured" m="addField" s="(Lvtools/dataModel/types/NameTypePair;)V" ent="244" xit="244" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.schema.Element" m="setParent" s="(Lvtools/dataModel/schema/Element;)V" ent="244" xit="244" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getDT" s="(Ljava/lang/String;)Lvtools/dataModel/types/Atomic;" ent="234" xit="234" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="setName" s="(Ljava/lang/String;)V" ent="234" xit="234" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getAttrId" s="(IIZ)Ljava/lang/String;" ent="204" xit="204" err="0" dur="10000000" sos="28" mct="1" min="0" max="4000000">
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="204" xit="204" err="0" dur="10000000" sos="28" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="204" xit="204" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="154000000" sos="8666" mct="1" min="2000000" max="89000000">
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;Ltresc/benchmark/Constants$SkolemKind;)V" ent="10" xit="10" err="0" dur="118000000" sos="8048" mct="1" min="0" max="88000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="113000000" sos="7669" mct="1" min="0" max="86000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="104" xit="104" err="0" dur="10000000" sos="66" mct="1" min="0" max="8000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="20" xit="20" err="0" dur="99000000" sos="7565" mct="1" min="0" max="86000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="20" xit="20" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="40" xit="40" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="208" xit="208" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="16000000" sos="198" mct="1" min="0" max="14000000">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="94" xit="94" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="8000000" sos="30" mct="1" min="0" max="5000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="8000000" sos="30" mct="1" min="0" max="5000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="5000000" sos="25" mct="1" min="0" max="5000000"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="11000000" sos="15" mct="1" min="0" max="2000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="11000000" sos="15" mct="1" min="0" max="2000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="385" xit="385" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="94" xit="94" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="188" xit="188" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="55" xit="55" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="51" xit="51" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$JoinKind" m="values" s="()[Ltresc/benchmark/Constants$JoinKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.MappingScenario" m="get_basicScens" s="()Ljava/util/Map;" ent="140" xit="140" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="98" xit="98" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;Ltresc/benchmark/Constants$SkolemKind;)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="215" xit="215" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="60" xit="60" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="215" xit="215" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1745" xit="1745" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="108" xit="108" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="206" xit="206" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="10000000" sos="20" mct="1" min="0" max="3000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1845" xit="1845" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="127" xit="127" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="28" xit="28" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="5183" xit="5183" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="156" xit="156" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="28" xit="28" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="20" xit="20" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="142" xit="142" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="34000000" sos="186" mct="1" min="1000000" max="8000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="204" xit="204" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="9000000" sos="13" mct="1" min="0" max="2000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="9000000" sos="13" mct="1" min="0" max="2000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="26" xit="26" err="0" dur="8000000" sos="12" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="26" xit="26" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="5574" xit="5574" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="26" xit="26" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="230" xit="230" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.util.CollectionUtils" m="concat" s="([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.CollectionUtils" m="concatArrays" s="([[Ljava/lang/String;)[Ljava/lang/String;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumNormalAttrs" s="(I)I" ent="42" xit="42" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="42" xit="42" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getNumRelAttr" s="(IZ)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;Ltresc/benchmark/Constants$SkolemKind;I[[Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="13000000" sos="27" mct="1" min="0" max="4000000">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumNormalAttrs" s="(I)I" ent="3" xit="3" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAllVarsInMapping" s="(Lorg/vagabond/xmlmodel/MappingType;Z)Ljava/util/Vector;" ent="9" xit="9" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="24" xit="24" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="527" xit="527" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="60" xit="60" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomWithoutReplacementSequence" s="(Ljava/util/Random;ILjava/util/Vector;)Ljava/util/Vector;" ent="9" xit="9" err="0" dur="4000000" sos="10" mct="1" min="0" max="3000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="71" xit="71" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="16" xit="16" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="26" xit="26" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="204" xit="204" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="262000000" sos="21754" mct="1" min="2000000" max="136000000">
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="genOneMappingSO" s="([Z)V" ent="66" xit="66" err="0" dur="262000000" sos="3844" mct="1" min="0" max="36000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;ILjava/lang/String;)V" ent="704" xit="704" err="0" dur="47000000" sos="815" mct="1" min="0" max="28000000">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="704" xit="704" err="0" dur="37000000" sos="799" mct="1" min="0" max="28000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="704" xit="704" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="704" xit="704" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="66" xit="66" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="66" xit="66" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="66" xit="66" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="66" xit="66" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="66" xit="66" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="120" xit="120" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="120" xit="120" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="(IZ)Ljava/util/List;" ent="120" xit="120" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="120" xit="120" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="120" xit="120" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;Ljava/lang/String;)V" ent="523" xit="523" err="0" dur="59000000" sos="493" mct="1" min="0" max="21000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="523" xit="523" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="523" xit="523" err="0" dur="9000000" sos="21" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="523" xit="523" err="0" dur="35000000" sos="455" mct="1" min="0" max="21000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="523" xit="523" err="0" dur="2000000" sos="4" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="523" xit="523" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="66" xit="66" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="66" xit="66" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="66" xit="66" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="132" xit="132" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="66" xit="66" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="66" xit="66" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="1227" xit="1227" err="0" dur="18000000" sos="130" mct="1" min="0" max="11000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="1227" xit="1227" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="1227" xit="1227" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="2454" xit="2454" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="1227" xit="1227" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="120" xit="120" err="0" dur="109000000" sos="1067" mct="1" min="0" max="28000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="120" xit="120" err="0" dur="43000000" sos="161" mct="1" min="0" max="9000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="120" xit="120" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="120" xit="120" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="120" xit="120" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10497" xit="10497" err="0" dur="30000000" sos="82" mct="1" min="0" max="5000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="120" xit="120" err="0" dur="14000000" sos="170" mct="1" min="0" max="13000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="66" xit="66" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="120" xit="120" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="120" xit="120" err="0" dur="5000000" sos="11" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="120" xit="120" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="824" xit="824" err="0" dur="24000000" sos="206" mct="1" min="0" max="14000000"/>
</call>
<call c="org.vagabond.util.CollectionUtils" m="insertAtPositions" s="([Ljava/lang/String;[Ljava/lang/String;[I)[Ljava/lang/String;" ent="120" xit="120" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="120" xit="120" err="0" dur="6000000" sos="26" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="198" xit="198" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="1293" xit="1293" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="increase" s="([Z)[Z" ent="66" xit="66" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="56" xit="56" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getNumJoinAttrs" s="(I)I" ent="29" xit="29" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$JoinKind" m="values" s="()[Ltresc/benchmark/Constants$JoinKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$JoinKind" m="values" s="()[Ltresc/benchmark/Constants$JoinKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="40" xit="40" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$JoinKind" m="values" s="()[Ltresc/benchmark/Constants$JoinKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="9000000" sos="9" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;Ltresc/benchmark/Constants$SkolemKind;)V" ent="10" xit="10" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAllVarsInMapping" s="(Lorg/vagabond/xmlmodel/MappingType;Z)Ljava/util/Vector;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="236" xit="236" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="60" xit="60" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="30" xit="30" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomWithoutReplacementSequence" s="(Ljava/util/Random;ILjava/util/Vector;)Ljava/util/Vector;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="9" xit="9" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="27" xit="27" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="227" xit="227" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1545" xit="1545" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="105" xit="105" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="210" xit="210" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.DeleteAttributeScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1645" xit="1645" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="95" xit="95" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1645" xit="1645" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="85" xit="85" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="180" xit="180" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPIsAScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="30" xit="30" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="15000000" sos="25" mct="1" min="1000000" max="2000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addVarsToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="83" xit="83" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addEmptyExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="28" xit="28" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="28" xit="28" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="generateSKs" s="(Lorg/vagabond/xmlmodel/MappingType;IIILtresc/benchmark/Constants$SkolemKind;)V" ent="28" xit="28" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAllVarsInMapping" s="(Lorg/vagabond/xmlmodel/MappingType;Z)Ljava/util/Vector;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="55" xit="55" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="7" xit="7" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomWithoutReplacementSequence" s="(Ljava/util/Random;ILjava/util/Vector;)Ljava/util/Vector;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="4" xit="4" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addSKToExistsAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;Ljava/lang/String;)V" ent="18" xit="18" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="103" xit="103" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="18" xit="18" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="18" xit="18" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="29" xit="29" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Lorg/vagabond/xmlmodel/MappingType;I[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="getRelName" s="(IZ)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="1445" xit="1445" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="83" xit="83" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.VerticalPartitionScenarioGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$MappingLanguageType" s="()[I" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="48" xit="48" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="176" xit="176" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="116000000" sos="4738" mct="1" min="1000000" max="54000000">
<call c="smark.support.PartialMapping" m="getTargetRels" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="(Ljava/util/List;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="29000000" sos="785" mct="1" min="0" max="28000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="14000000" sos="170" mct="1" min="0" max="13000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="8000000" sos="64" mct="1" min="0" max="8000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="5000000" sos="25" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.PartialMapping" m="getCorrs" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="76000000" sos="2282" mct="1" min="0" max="41000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="55" xit="55" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="5000000" sos="11" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="41000000" sos="1681" mct="1" min="0" max="41000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="23000000" sos="529" mct="1" min="0" max="23000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="94" xit="94" err="0" dur="4000000" sos="10" mct="1" min="0" max="3000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="getSourceRels" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="9000000" sos="9" mct="1" min="0" max="1000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="55" xit="55" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="94" xit="94" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="94" xit="94" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="tresc.benchmark.schemaGen.AddDeleteScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="40" xit="40" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.CopyScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="17000000" sos="173" mct="1" min="0" max="13000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="9000000" sos="81" mct="1" min="0" max="9000000">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="genMappings" s="()V" ent="10" xit="10" err="0" dur="220000000" sos="20874" mct="1" min="3000000" max="140000000">
<call c="smark.support.PartialMapping" m="getTargetRels" s="()Ljava/util/List;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addForeachAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="23" xit="23" err="0" dur="152000000" sos="15702" mct="1" min="0" max="125000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="23" xit="23" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="506" xit="506" err="0" dur="5000000" sos="7" mct="1" min="0" max="2000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="23" xit="23" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="23" xit="23" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="isSetForeach" s="()Z" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="231" xit="231" err="0" dur="136000000" sos="15400" mct="1" min="0" max="124000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="33" xit="33" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="getSourceRels" s="()Ljava/util/List;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="46" xit="46" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addMapping" s="([Lorg/vagabond/xmlmodel/CorrespondenceType;)Lorg/vagabond/xmlmodel/MappingType;" ent="23" xit="23" err="0" dur="8000000" sos="14" mct="1" min="0" max="3000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="46" xit="46" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="23" xit="23" err="0" dur="6000000" sos="12" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="23" xit="23" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="setId" s="(Ljava/lang/String;)V" ent="23" xit="23" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.PartialMapping" m="addMapping" s="(Lorg/vagabond/xmlmodel/MappingType;)V" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="addExistsAtom" s="(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V" ent="23" xit="23" err="0" dur="52000000" sos="788" mct="1" min="0" max="24000000">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getMapping" s="(Ljava/lang/String;)Lorg/vagabond/xmlmodel/MappingType;" ent="23" xit="23" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getId" s="()Ljava/lang/String;" ent="506" xit="506" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setTableref" s="(Ljava/lang/String;)V" ent="23" xit="23" err="0" dur="25000000" sos="577" mct="1" min="0" max="24000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="23" xit="23" err="0" dur="13000000" sos="169" mct="1" min="0" max="13000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewVar" s="()Lorg/apache/xmlbeans/XmlString;" ent="208" xit="208" err="0" dur="9000000" sos="11" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.HorizontalPartitionScenarioGenerator" m="getCorrForFrag" s="(I)[Lorg/vagabond/xmlmodel/CorrespondenceType;" ent="23" xit="23" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000">
<call c="tresc.benchmark.Configuration" m="getTrampXMLOutputOption" s="(Ltresc/benchmark/Constants$TrampXMLOutputSwitch;)Z" ent="23" xit="23" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="46" xit="46" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="439" xit="439" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomNumberAroundSomething" s="(Ljava/util/Random;II)I" ent="20" xit="20" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="initPartialMapping" s="()V" ent="10" xit="10" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="smark.support.PartialMapping" m="setTrans" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.PartialMapping" m="setCorrs" s="(Ljava/util/List;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setPartialMapping" s="(Lsmark/support/PartialMapping;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$JoinKind" m="values" s="()[Ltresc/benchmark/Constants$JoinKind;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.VPHasAScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergingScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.VPNtoMScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.FusionScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="scenarioSanityCheck" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTransformation" s="()Lvtools/dataModel/expression/SPJQuery;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.AddAttributeScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getDeviation" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="8" xit="8" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getScenarioRepetitions" s="(I)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMapType" s="()Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.ValueGenerationScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.SurrogateKeysScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.MergeAddScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.SelfJoinScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="initIdGen" s="()V" ent="1" xit="1" err="0" dur="5000000" sos="25" mct="1" min="5000000" max="5000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createIdType" s="(Ljava/lang/String;Ljava/lang/String;)V" ent="6" xit="6" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000"/>
</call>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="init" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.GLAVScenarioGenerator" m="generateScenario" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="init" s="(Ltresc/benchmark/Configuration;Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.AbstractScenarioGenerator" m="scenarioSanityCheck" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTransformation" s="()Lvtools/dataModel/expression/SPJQuery;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getSource" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getDeviation" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="8" xit="8" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getScenarioRepetitions" s="(I)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMapType" s="()Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.GLAVScenarioGenerator" m="getScenType" s="()Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getTarget" s="()Lvtools/dataModel/schema/Schema;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="generateScenario" s="(Lsmark/support/MappingScenario;Ltresc/benchmark/Configuration;)V" ent="1" xit="1" err="0" dur="2398000000" sos="5750404" mct="1" min="2398000000" max="2398000000">
<call c="tresc.benchmark.Configuration" m="getRandomGenerator" s="()Ljava/util/Random;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getArgPositions" s="()[I" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="addSkolemsToMappings" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;)V" ent="188" xit="188" err="0" dur="1045000000" sos="43279" mct="1" min="0" max="90000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAtomParameters" s="(Lorg/vagabond/xmlmodel/MappingType;ZI)[Ljava/lang/Object;" ent="378" xit="378" err="0" dur="134000000" sos="7602" mct="1" min="0" max="86000000">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="sizeOfSKFunctionArray" s="()I" ent="378" xit="378" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="(I)Ljava/lang/String;" ent="3664" xit="3664" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="sizeOfVarArray" s="()I" ent="378" xit="378" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="378" xit="378" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="(I)Lorg/vagabond/xmlmodel/RelAtomType;" ent="378" xit="378" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="addNewMapping" s="()Lorg/vagabond/xmlmodel/MappingType;" ent="188" xit="188" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="10928" xit="10928" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="2034" xit="2034" err="0" dur="22000000" sos="80" mct="1" min="0" max="8000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="11194" xit="11194" err="0" dur="15000000" sos="27" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="10890" xit="10890" err="0" dur="8000000" sos="8" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgVars" s="([Ljava/lang/String;)V" ent="10928" xit="10928" err="0" dur="9000000" sos="65" mct="1" min="0" max="8000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttrVar" s="()Ljava/lang/String;" ent="21642" xit="21642" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="564" xit="564" err="0" dur="4000000" sos="6" mct="1" min="0" max="2000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="564" xit="564" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="10928" xit="10928" err="0" dur="20000000" sos="20" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="1310" xit="1310" err="0" dur="10000000" sos="100" mct="1" min="0" max="10000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="addNewAtom" s="()Lorg/vagabond/xmlmodel/RelAtomType;" ent="188" xit="188" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="304" xit="304" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1134" xit="1134" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setAttrVar" s="(Ljava/lang/String;)V" ent="10928" xit="10928" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="sizeOfMappingArray" s="()I" ent="188" xit="188" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getMapsForSourceRelation" s="(Ljava/lang/String;)[Lorg/vagabond/xmlmodel/MappingType;" ent="188" xit="188" err="0" dur="3000000" sos="9" mct="1" min="0" max="3000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setVarArray" s="([Ljava/lang/String;)V" ent="2034" xit="2034" err="0" dur="126000000" sos="2510" mct="1" min="0" max="46000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getArgPositions" s="()[I" ent="10928" xit="10928" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getTableref" s="()Ljava/lang/String;" ent="22020" xit="22020" err="0" dur="35000000" sos="173" mct="1" min="0" max="11000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getArgVars" s="()[Ljava/lang/String;" ent="724" xit="724" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="564" xit="564" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="removeMapping" s="(I)V" ent="188" xit="188" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="addNewExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="188" xit="188" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getSkId" s="()Ljava/lang/String;" ent="724" xit="724" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAtomPos" s="(Lorg/vagabond/xmlmodel/MappingType;Ljava/lang/String;)I" ent="378" xit="378" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getTableref" s="()Ljava/lang/String;" ent="493" xit="493" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="378" xit="378" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="378" xit="378" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="1310" xit="1310" err="0" dur="113000000" sos="6695" mct="1" min="0" max="79000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="21830" xit="21830" err="0" dur="8000000" sos="8" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="2034" xit="2034" err="0" dur="59000000" sos="647" mct="1" min="0" max="19000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="setAtomParameters" s="([Ljava/lang/Object;Lorg/vagabond/xmlmodel/RelAtomType;)V" ent="378" xit="378" err="0" dur="318000000" sos="6932" mct="1" min="0" max="71000000">
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setVarArray" s="([Ljava/lang/String;)V" ent="2034" xit="2034" err="0" dur="113000000" sos="5001" mct="1" min="0" max="70000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getSkname" s="()Ljava/lang/String;" ent="2034" xit="2034" err="0" dur="9000000" sos="21" mct="1" min="0" max="4000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addNewSKFunction" s="()Lorg/vagabond/xmlmodel/SKFunction;" ent="2034" xit="2034" err="0" dur="49000000" sos="539" mct="1" min="0" max="18000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="2034" xit="2034" err="0" dur="27000000" sos="89" mct="1" min="0" max="7000000"/>
<call c="org.vagabond.xmlmodel.impl.SKFunctionImpl" m="setSkname" s="(Ljava/lang/String;)V" ent="2034" xit="2034" err="0" dur="16000000" sos="16" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="addVar" s="(Ljava/lang/String;)V" ent="2940" xit="2940" err="0" dur="66000000" sos="738" mct="1" min="0" max="23000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setSKFunctionArray" s="([Lorg/vagabond/xmlmodel/SKFunction;)V" ent="378" xit="378" err="0" dur="14000000" sos="56" mct="1" min="0" max="7000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="setVarArray" s="([Ljava/lang/String;)V" ent="378" xit="378" err="0" dur="13000000" sos="33" mct="1" min="0" max="5000000"/>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttrPosition" s="()I" ent="10928" xit="10928" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttr" s="()Ljava/lang/String;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="indexMappings" s="()V" ent="1" xit="1" err="0" dur="2000000" sos="4" mct="1" min="2000000" max="2000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getMappings" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingsTypeImpl" m="getMappingArray" s="()[Lorg/vagabond/xmlmodel/MappingType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getTableref" s="()Ljava/lang/String;" ent="314" xit="314" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getMapsForSourceRel" s="()Ljava/util/Map;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="219" xit="219" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="438" xit="438" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttrVar" s="()Ljava/lang/String;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="376" xit="376" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="generateVictims" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;Ljava/util/Vector;Ljava/util/Vector;I)V" ent="188" xit="188" err="0" dur="790000000" sos="54692" mct="1" min="0" max="179000000">
<call c="vtools.dataModel.types.RandSrcSkolem" m="setAttrVar" s="(Ljava/lang/String;)V" ent="1623" xit="1623" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getMapsForSourceRelation" s="(Ljava/lang/String;)[Lorg/vagabond/xmlmodel/MappingType;" ent="1623" xit="1623" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setSkId" s="(Ljava/lang/String;)V" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="getAttrPositions" s="(I)[I" ent="620" xit="620" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getNextId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="494" xit="494" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.UniqueIdGen" m="createId" s="(Ljava/lang/String;)Ljava/lang/String;" ent="494" xit="494" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.Pair" m="setValue" s="(Ljava/lang/Object;)V" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getValue" s="()Ljava/lang/Object;" ent="988" xit="988" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.Pair" m="getKey" s="()Ljava/lang/Object;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="2830" xit="2830" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;[IZ)[Ljava/lang/String;" ent="620" xit="620" err="0" dur="43000000" sos="591" mct="1" min="0" max="20000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="620" xit="620" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="6935" xit="6935" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="6935" xit="6935" err="0" dur="20000000" sos="400" mct="1" min="0" max="20000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrVars" s="(Ljava/lang/String;)[Ljava/lang/String;" ent="513" xit="513" err="0" dur="11000000" sos="11" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="803" xit="803" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getMapsForSourceRelation" s="(Ljava/lang/String;)[Lorg/vagabond/xmlmodel/MappingType;" ent="513" xit="513" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getTableref" s="()Ljava/lang/String;" ent="1329" xit="1329" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MapExprTypeImpl" m="getAtomArray" s="()[Lorg/vagabond/xmlmodel/RelAtomType;" ent="773" xit="773" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getForeach" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="773" xit="773" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="513" xit="513" err="0" dur="18000000" sos="150" mct="1" min="0" max="12000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttr" s="()Ljava/lang/String;" ent="21132" xit="21132" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttrVar" s="()Ljava/lang/String;" ent="1623" xit="1623" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="620" xit="620" err="0" dur="6000000" sos="36" mct="1" min="0" max="6000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="()[Ljava/lang/String;" ent="29821" xit="29821" err="0" dur="194000000" sos="2966" mct="1" min="0" max="41000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setAttr" s="(Ljava/lang/String;)V" ent="1623" xit="1623" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelAtomTypeImpl" m="getVarArray" s="(I)Ljava/lang/String;" ent="48918" xit="48918" err="0" dur="107000000" sos="3693" mct="1" min="0" max="53000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setAttrPosition" s="(I)V" ent="1623" xit="1623" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="2756" xit="2756" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingTypeImpl" m="getExists" s="()Lorg/vagabond/xmlmodel/MapExprType;" ent="2830" xit="2830" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttrPosition" s="()I" ent="1623" xit="1623" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1133" xit="1133" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="getNonKeyAttributes" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;)[Ljava/lang/String;" ent="406" xit="406" err="0" dur="44000000" sos="178" mct="1" min="0" max="11000000">
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="stripOutPKPositions" s="(I[I[I)[I" ent="406" xit="406" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;[IZ)[Ljava/lang/String;" ent="406" xit="406" err="0" dur="6000000" sos="8" mct="1" min="0" max="2000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="406" xit="406" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="3977" xit="3977" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="3977" xit="3977" err="0" dur="3000000" sos="5" mct="1" min="0" max="2000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="812" xit="812" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getPKPos" s="(Ljava/lang/String;Z)[I" ent="406" xit="406" err="0" dur="15000000" sos="35" mct="1" min="0" max="5000000">
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="getAttrArray" s="()[Ljava/lang/String;" ent="406" xit="406" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="406" xit="406" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="406" xit="406" err="0" dur="5000000" sos="25" mct="1" min="0" max="5000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="406" xit="406" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="sizeOfAttrArray" s="()I" ent="406" xit="406" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="406" xit="406" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="4591" xit="4591" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="406" xit="406" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="812" xit="812" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="5809" xit="5809" err="0" dur="8000000" sos="10" mct="1" min="0" max="2000000"/>
</call>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getSkId" s="()Ljava/lang/String;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getParam" s="(Ltresc/benchmark/Constants$ParameterName;)I" ent="188" xit="188" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.MappingScenario" m="getDocFac" s="()Lorg/vagabond/benchmark/model/TrampModelFactory;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="1752" xit="1752" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="188" xit="188" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.SchemaTypeImpl" m="getRelationArray" s="()[Lorg/vagabond/xmlmodel/RelationType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttrPosition" s="()I" ent="494" xit="494" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="generateSkolemArguments" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;Ljava/util/Vector;I)V" ent="188" xit="188" err="0" dur="249000000" sos="7163" mct="1" min="0" max="61000000">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="494" xit="494" err="0" dur="61000000" sos="3601" mct="1" min="0" max="60000000"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="useKeyAsArgument" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;Lvtools/dataModel/types/RandSrcSkolem;[Ljava/lang/String;)V" ent="174" xit="174" err="0" dur="18000000" sos="40" mct="1" min="0" max="5000000">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="39" xit="39" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getSkId" s="()Ljava/lang/String;" ent="174" xit="174" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgAttrs" s="([Ljava/lang/String;)V" ent="346" xit="346" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgPositions" s="([I)V" ent="135" xit="135" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="getAttrPositions" s="([Ljava/lang/String;[Ljava/lang/String;)[I" ent="135" xit="135" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="convertVectorToIntegerArray" s="(Ljava/util/Vector;)[I" ent="135" xit="135" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getPK" s="(Ljava/lang/String;Z)[Ljava/lang/String;" ent="270" xit="270" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.xmlmodel.impl.AttrListTypeImpl" m="getAttrArray" s="()[Ljava/lang/String;" ent="270" xit="270" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="270" xit="270" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getPrimaryKey" s="()Lorg/vagabond/xmlmodel/AttrListType;" ent="270" xit="270" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="270" xit="270" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="270" xit="270" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="isSetPrimaryKey" s="()Z" ent="174" xit="174" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="270" xit="270" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getFreshVars" s="(II)[Ljava/lang/String;" ent="211" xit="211" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="getVarString" s="(I)Ljava/lang/String;" ent="211" xit="211" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="getAttrPositions" s="(I)[I" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getAttrNames" s="(Ljava/lang/String;[IZ)[Ljava/lang/String;" ent="494" xit="494" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getRelForName" s="(Ljava/lang/String;Z)Lorg/vagabond/xmlmodel/RelationType;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.AttrDefTypeImpl" m="getName" s="()Ljava/lang/String;" ent="5523" xit="5523" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="(I)Lorg/vagabond/xmlmodel/AttrDefType;" ent="5523" xit="5523" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getName" s="()Ljava/lang/String;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="useRandomAsArgument" s="(Lorg/vagabond/xmlmodel/RelationType;Lsmark/support/MappingScenario;Lvtools/dataModel/types/RandSrcSkolem;[Ljava/lang/String;)V" ent="207" xit="207" err="0" dur="116000000" sos="2974" mct="1" min="0" max="49000000">
<call c="vtools.dataModel.types.RandSrcSkolem" m="getSkId" s="()Ljava/lang/String;" ent="207" xit="207" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgAttrs" s="([Ljava/lang/String;)V" ent="207" xit="207" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgPositions" s="([I)V" ent="207" xit="207" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="207" xit="207" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="getRandomWithoutReplacementSequence" s="(Ljava/util/Random;ILjava/util/Vector;)Ljava/util/Vector;" ent="207" xit="207" err="0" dur="21000000" sos="177" mct="1" min="0" max="13000000">
<call c="tresc.benchmark.utils.Utils" m="getRandomUniformNumber" s="(Ljava/util/Random;I)I" ent="1077" xit="1077" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000"/>
</call>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="getAttrPositions" s="([Ljava/lang/String;[Ljava/lang/String;)[I" ent="207" xit="207" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="convertVectorToIntegerArray" s="(Ljava/util/Vector;)[I" ent="207" xit="207" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttr" s="()Ljava/lang/String;" ent="870" xit="870" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="useAllAsArgument" s="(Lorg/vagabond/xmlmodel/RelationType;Lvtools/dataModel/types/RandSrcSkolem;[Ljava/lang/String;)V" ent="195" xit="195" err="0" dur="44000000" sos="250" mct="1" min="0" max="11000000">
<call c="vtools.dataModel.types.RandSrcSkolem" m="getSkId" s="()Ljava/lang/String;" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgAttrs" s="([Ljava/lang/String;)V" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="setArgPositions" s="([I)V" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.utils.Utils" m="convertVectorToStringArray" s="(Ljava/util/Vector;)[Ljava/lang/String;" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="getAttrPositions" s="([Ljava/lang/String;[Ljava/lang/String;)[I" ent="195" xit="195" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="convertVectorToIntegerArray" s="(Ljava/util/Vector;)[I" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getArgAttrs" s="()[Ljava/lang/String;" ent="195" xit="195" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getAttr" s="()Ljava/lang/String;" ent="2338" xit="2338" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.schemaGen.RandomSourceSkolemToMappingGenerator" m="$SWITCH_TABLE$tresc$benchmark$Constants$SkolemKind" s="()[I" ent="494" xit="494" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$SkolemKind" m="values" s="()[Ltresc/benchmark/Constants$SkolemKind;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="494" xit="494" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.RelationTypeImpl" m="getAttrArray" s="()[Lorg/vagabond/xmlmodel/AttrDefType;" ent="494" xit="494" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.types.RandSrcSkolem" m="getArgAttrs" s="()[Ljava/lang/String;" ent="988" xit="988" err="0" dur="0" sos="0" mct="1"/>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="getSchema" s="(Z)Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="getScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="getSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="smark.support.MappingScenario" m="getDoc" s="()Lorg/vagabond/benchmark/model/TrampXMLModel;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.benchmark.model.TrampModelFactory" m="setStScen" s="(Lsmark/support/MappingScenario;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.STBenchmark" m="printResults" s="(Lsmark/support/MappingScenario;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="2307000000" sos="5322249" mct="1" min="2307000000" max="2307000000">
<call c="smark.support.MappingScenario" m="toString" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="1541000000" sos="2374681" mct="1" min="1541000000" max="1541000000">
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="toString" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="1076000000" sos="1157776" mct="1" min="1076000000" max="1076000000"/>
<call c="smark.support.MappingScenario" m="prettyPrint" s="(Ljava/lang/StringBuffer;I)V" ent="1" xit="1" err="0" dur="440000000" sos="193600" mct="1" min="440000000" max="440000000">
<call c="vtools.utils.structures.AssociativeArray" m="size" s="()I" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.SPJQuery" m="getSelect" s="()Lvtools/dataModel/expression/SelectClauseList;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.SPJQuery" m="getFrom" s="()Lvtools/dataModel/expression/FromClauseList;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="toString" s="()Ljava/lang/String;" ent="2" xit="2" err="0" dur="440000000" sos="105778" mct="1" min="153000000" max="287000000">
<call c="vtools.dataModel.schema.Schema" m="getPrintVisitor" s="()Lvtools/visitor/Visitor;" ent="2" xit="2" err="0" dur="7000000" sos="49" mct="1" min="0" max="7000000"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="431000000" sos="100945" mct="1" min="152000000" max="279000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="431000000" sos="100945" mct="1" min="152000000" max="279000000">
<call c="vtools.dataModel.schema.StringPrinter" m="visit" s="(Lvtools/dataModel/schema/Schema;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="431000000" sos="100945" mct="1" min="152000000" max="279000000">
<call c="vtools.dataModel.schema.Schema" m="getConstraint" s="(I)Lvtools/dataModel/expression/Rule;" ent="478" xit="478" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="getHumanReadableRepresentation" s="()[[Ljava/lang/String;" ent="324" xit="324" err="0" dur="17000000" sos="19" mct="1" min="0" max="2000000">
<call c="vtools.dataModel.expression.Key" m="stringisize" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/FromClauseList;Lvtools/dataModel/expression/Variable;)[Ljava/lang/String;" ent="782" xit="782" err="0" dur="12000000" sos="12" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="782" xit="782" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="458" xit="458" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="458" xit="458" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="458" xit="458" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="458" xit="458" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="458" xit="458" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="782" xit="782" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getVarExpression" s="(Lvtools/dataModel/expression/Variable;)Lvtools/dataModel/expression/Expression;" ent="324" xit="324" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.FromClauseList" m="getExpression" s="(I)Lvtools/dataModel/expression/Expression;" ent="324" xit="324" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getValue" s="(I)Ljava/lang/Object;" ent="324" xit="324" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="324" xit="324" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="324" xit="324" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="324" xit="324" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="324" xit="324" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="324" xit="324" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="324" xit="324" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="324" xit="324" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="324" xit="324" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="324" xit="324" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Projection" m="getLabel" s="()Ljava/lang/String;" ent="782" xit="782" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getLeft" s="()Lvtools/dataModel/expression/ValueExpression;" ent="1106" xit="1106" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.AND" m="getComponent" s="(I)Lvtools/dataModel/expression/BooleanExpression;" ent="458" xit="458" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.AND" m="add" s="(Lvtools/dataModel/expression/BooleanExpression;)V" ent="227" xit="227" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.LogicOperator" m="size" s="()I" ent="648" xit="648" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
<call c="vtools.dataModel.expression.ForeignKey" m="getHumanReadableRepresentation" s="()[[[Ljava/lang/String;" ent="154" xit="154" err="0" dur="7000000" sos="7" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.ForeignKey" m="stringisize" s="(Lvtools/dataModel/expression/Path;Lvtools/dataModel/expression/FromClauseList;)[Ljava/lang/String;" ent="308" xit="308" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.FromClauseList" m="getVarExpression" s="(Lvtools/dataModel/expression/Variable;)Lvtools/dataModel/expression/Expression;" ent="308" xit="308" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.FromClauseList" m="getExpression" s="(I)Lvtools/dataModel/expression/Expression;" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getValue" s="(I)Ljava/lang/Object;" ent="308" xit="308" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVarPosition" s="(Lvtools/dataModel/expression/Variable;)I" ent="308" xit="308" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="vtools.utils.structures.AssociativeArray" m="getKeyPosition" s="(Ljava/lang/Object;)I" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="vequals" s="(Ljava/lang/Object;Ljava/lang/Object;)Z" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="equals" s="(Ljava/lang/Object;)Z" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Path" m="equals" s="(Ljava/lang/Object;)Z" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.ValueExpression" m="equals" s="(Ljava/lang/Object;)Z" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Expression" m="equals" s="(Ljava/lang/Object;)Z" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="equals" s="(Ljava/lang/Object;)Z" ent="308" xit="308" err="0" dur="0" sos="0" mct="1">
<call c="vtools.VObject" m="getHook" s="()Ljava/lang/Object;" ent="308" xit="308" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="616" xit="616" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getLabel" s="()Ljava/lang/String;" ent="616" xit="616" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getLeft" s="()Lvtools/dataModel/expression/ValueExpression;" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="getRightConditions" s="()Lvtools/dataModel/expression/BooleanExpression;" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getRight" s="()Lvtools/dataModel/expression/ValueExpression;" ent="154" xit="154" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
</call>
<call c="vtools.VObject" m="toString" s="()Ljava/lang/String;" ent="478" xit="478" err="0" dur="181000000" sos="9033" mct="1" min="0" max="93000000">
<call c="vtools.dataModel.expression.Key" m="getPrintVisitor" s="()Lvtools/visitor/Visitor;" ent="324" xit="324" err="0" dur="9000000" sos="81" mct="1" min="0" max="9000000"/>
<call c="vtools.dataModel.expression.ForeignKey" m="getPrintVisitor" s="()Lvtools/visitor/Visitor;" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="478" xit="478" err="0" dur="170000000" sos="7438" mct="1" min="0" max="84000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="478" xit="478" err="0" dur="170000000" sos="7438" mct="1" min="0" max="84000000">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Rule;[Ljava/lang/Object;)Ljava/lang/Object;" ent="478" xit="478" err="0" dur="72000000" sos="384" mct="1" min="0" max="15000000">
<call c="vtools.utils.structures.AssociativeArray" m="size" s="()I" ent="1912" xit="1912" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Key" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="324" xit="324" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000"/>
<call c="vtools.dataModel.expression.Rule" m="getRightTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="154" xit="154" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.FromClauseList" m="getExprVar" s="(I)Lvtools/dataModel/expression/Variable;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getKey" s="(I)Ljava/lang/Object;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.FromClauseList" m="getExpression" s="(I)Lvtools/dataModel/expression/Expression;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1">
<call c="vtools.utils.structures.AssociativeArray" m="getValue" s="(I)Ljava/lang/Object;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="1758" xit="1758" err="0" dur="65000000" sos="349" mct="1" min="0" max="14000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="1758" xit="1758" err="0" dur="64000000" sos="348" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/LogicOperator;[Ljava/lang/Object;)Ljava/lang/Object;" ent="97" xit="97" err="0" dur="25000000" sos="127" mct="1" min="0" max="9000000">
<call c="vtools.dataModel.expression.AND" m="getSymbol" s="()Ljava/lang/String;" ent="134" xit="134" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="231" xit="231" err="0" dur="19000000" sos="91" mct="1" min="0" max="9000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="231" xit="231" err="0" dur="18000000" sos="90" mct="1" min="0" max="9000000">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/ComparisonOperator;[Ljava/lang/Object;)Ljava/lang/Object;" ent="231" xit="231" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.EQ" m="getSymbol" s="()Ljava/lang/String;" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getLeft" s="()Lvtools/dataModel/expression/ValueExpression;" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="462" xit="462" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="462" xit="462" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Projection;[Ljava/lang/Object;)Ljava/lang/Object;" ent="462" xit="462" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="462" xit="462" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="462" xit="462" err="0" dur="0" sos="0" mct="1">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="462" xit="462" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Variable;[Ljava/lang/Object;)Ljava/lang/Object;" ent="462" xit="462" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="462" xit="462" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Projection" m="getLabel" s="()Ljava/lang/String;" ent="462" xit="462" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getRight" s="()Lvtools/dataModel/expression/ValueExpression;" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.AND" m="getComponent" s="(I)Lvtools/dataModel/expression/BooleanExpression;" ent="231" xit="231" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.LogicOperator" m="size" s="()I" ent="194" xit="194" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Projection;[Ljava/lang/Object;)Ljava/lang/Object;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Projection" m="getLabel" s="()Ljava/lang/String;" ent="956" xit="956" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/ComparisonOperator;[Ljava/lang/Object;)Ljava/lang/Object;" ent="705" xit="705" err="0" dur="11000000" sos="11" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.EQ" m="getSymbol" s="()Ljava/lang/String;" ent="705" xit="705" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getLeft" s="()Lvtools/dataModel/expression/ValueExpression;" ent="705" xit="705" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="1410" xit="1410" err="0" dur="6000000" sos="6" mct="1" min="0" max="1000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="1410" xit="1410" err="0" dur="5000000" sos="5" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Variable;[Ljava/lang/Object;)Ljava/lang/Object;" ent="648" xit="648" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="648" xit="648" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Projection;[Ljava/lang/Object;)Ljava/lang/Object;" ent="762" xit="762" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.Projection" m="getPrefix" s="()Lvtools/dataModel/expression/Path;" ent="762" xit="762" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="762" xit="762" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="762" xit="762" err="0" dur="3000000" sos="3" mct="1" min="0" max="1000000">
<call c="vtools.dataModel.expression.StringPrinter" m="visit" s="(Lvtools/dataModel/expression/Variable;[Ljava/lang/Object;)Ljava/lang/Object;" ent="762" xit="762" err="0" dur="0" sos="0" mct="1">
<call c="vtools.dataModel.expression.Variable" m="getName" s="()Ljava/lang/String;" ent="762" xit="762" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Projection" m="getLabel" s="()Ljava/lang/String;" ent="762" xit="762" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.ComparisonOperator" m="getRight" s="()Lvtools/dataModel/expression/ValueExpression;" ent="705" xit="705" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="vtools.dataModel.expression.Rule" m="getLeftTerms" s="()Lvtools/dataModel/expression/FromClauseList;" ent="478" xit="478" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="getRightConditions" s="()Lvtools/dataModel/expression/BooleanExpression;" ent="478" xit="478" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.expression.Rule" m="getLeftConditions" s="()Lvtools/dataModel/expression/BooleanExpression;" ent="478" xit="478" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.schema.StringPrinter" m="visit" s="(Lvtools/dataModel/schema/Element;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="225000000" sos="25733" mct="1" min="98000000" max="127000000">
<call c="vtools.dataModel.types.NameTypePair" m="getType" s="()Lvtools/dataModel/types/Type;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="225000000" sos="25733" mct="1" min="98000000" max="127000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="225000000" sos="25733" mct="1" min="98000000" max="127000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Rcd;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="225000000" sos="25733" mct="1" min="98000000" max="127000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Complex;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="225000000" sos="25733" mct="1" min="98000000" max="127000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Structured;[Ljava/lang/Object;)Ljava/lang/Object;" ent="2" xit="2" err="0" dur="225000000" sos="25733" mct="1" min="98000000" max="127000000">
<call c="vtools.dataModel.types.Structured" m="getField" s="(I)Lvtools/dataModel/types/NameTypePair;" ent="425" xit="425" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.Structured" m="size" s="()I" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="225000000" sos="897" mct="1" min="0" max="17000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="225000000" sos="897" mct="1" min="0" max="17000000">
<call c="vtools.dataModel.schema.StringPrinter" m="visit" s="(Lvtools/dataModel/schema/Element;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="202000000" sos="608" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.types.NameTypePair" m="getType" s="()Lvtools/dataModel/types/Type;" ent="425" xit="425" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="202000000" sos="608" mct="1" min="0" max="14000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="202000000" sos="608" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Set;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="196000000" sos="568" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Group;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="194000000" sos="566" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Structured;[Ljava/lang/Object;)Ljava/lang/Object;" ent="425" xit="425" err="0" dur="190000000" sos="550" mct="1" min="0" max="14000000">
<call c="vtools.dataModel.types.Structured" m="getField" s="(I)Lvtools/dataModel/types/NameTypePair;" ent="3791" xit="3791" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.Structured" m="size" s="()I" ent="425" xit="425" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="3791" xit="3791" err="0" dur="184000000" sos="466" mct="1" min="0" max="13000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="3791" xit="3791" err="0" dur="180000000" sos="456" mct="1" min="0" max="13000000">
<call c="vtools.dataModel.schema.StringPrinter" m="visit" s="(Lvtools/dataModel/schema/Element;[Ljava/lang/Object;)Ljava/lang/Object;" ent="3791" xit="3791" err="0" dur="65000000" sos="323" mct="1" min="0" max="13000000">
<call c="vtools.dataModel.types.NameTypePair" m="getType" s="()Lvtools/dataModel/types/Type;" ent="3791" xit="3791" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.VObject" m="accept" s="(Lvtools/visitor/Visitor;[Ljava/lang/Object;)Ljava/lang/Object;" ent="3791" xit="3791" err="0" dur="54000000" sos="312" mct="1" min="0" max="13000000">
<call c="vtools.visitor.VisitorImpl" m="dispatch" s="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" ent="3791" xit="3791" err="0" dur="52000000" sos="310" mct="1" min="0" max="13000000">
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Int;[Ljava/lang/Object;)Ljava/lang/Object;" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="vtools.dataModel.types.StringPrinter" m="visit" s="(Lvtools/dataModel/types/Str;[Ljava/lang/Object;)Ljava/lang/Object;" ent="3781" xit="3781" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
<call c="vtools.dataModel.types.NameTypePair" m="getLabel" s="()Ljava/lang/String;" ent="3791" xit="3791" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.types.NameTypePair" m="getLabel" s="()Ljava/lang/String;" ent="425" xit="425" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="vtools.dataModel.types.NameTypePair" m="getLabel" s="()Ljava/lang/String;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="vtools.dataModel.schema.Schema" m="getConstrSize" s="()I" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</call>
</call>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="4" xit="4" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Configuration" m="getOutputOption" s="(Ltresc/benchmark/Constants$OutputOption;)Z" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getSourceSchemaFile" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMappingFileName" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getTargetSchemaFile" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Generator" m="instDataGen" s="(Ltresc/benchmark/Configuration;)Ltresc/benchmark/dataGen/DataGenerator;" ent="1" xit="1" err="0" dur="212000000" sos="44944" mct="1" min="212000000" max="212000000">
<call c="tresc.benchmark.dataGen.TrampCSVGen" m="initFromConfig" s="()V" ent="1" xit="1" err="0" dur="33000000" sos="1089" mct="1" min="33000000" max="33000000">
<call c="tresc.benchmark.dataGen.ToXDataGenerator" m="initFromConfig" s="()V" ent="1" xit="1" err="0" dur="33000000" sos="1089" mct="1" min="33000000" max="33000000">
<call c="tresc.benchmark.dataGen.ToXScriptOnlyDataGenerator" m="initFromConfig" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Configuration" m="getSourceInstanceFile" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.dataGen.DataGenerator" m="initFromConfig" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Configuration" m="getRepElemCount" s="()I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMaxNumValue" s="()I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getMaxStringLength" s="()I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Configuration" m="getInstancePathPrefix" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="getSourceDocumentName" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.dataGen.toxgenewrap.ToXGeneWrapper" m="setToXGenePath" s="(Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.Configuration" m="getDataGen" s="()Ltresc/benchmark/Constants$DataGenType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.dataGen.ToXScriptOnlyDataGenerator" m="initBuffers" s="()V" ent="1" xit="1" err="0" dur="174000000" sos="30276" mct="1" min="174000000" max="174000000">
<call c="org.vagabond.util.ewah.BitsetFactory" m="newBitset" s="(Lorg/vagabond/util/ewah/IBitSet$BitsetType;)Lorg/vagabond/util/ewah/IBitSet;" ent="1" xit="1" err="0" dur="18000000" sos="324" mct="1" min="18000000" max="18000000">
<call c="org.vagabond.util.ewah.BitsetFactory" m="$SWITCH_TABLE$org$vagabond$util$ewah$IBitSet$BitsetType" s="()[I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.ewah.IBitSet$BitsetType" m="values" s="()[Lorg/vagabond/util/ewah/IBitSet$BitsetType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="tresc.benchmark.Configuration" m="getSourceDocumentName" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="tresc.benchmark.STBenchmark" m="parseArgs" s="([Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="10000000" sos="100" mct="1" min="10000000" max="10000000">
<call c="org.vagabond.util.LoggerUtil" m="arrayToString" s="([Ljava/lang/String;)Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.LoggerUtil" m="arrayToString" s="([Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.CmdLineParser" m="parseArgument" s="([Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="isOption" s="(Ljava/lang/String;)Z" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.OptionDef" m="required" s="()Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.spi.StringOptionHandler" m="parseArguments" s="(Lorg/kohsuke/args4j/spi/Parameters;)I" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.spi.FieldSetter" m="addValue" s="(Ljava/lang/Object;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="getParameter" s="(I)Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="getCurrentToken" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.CmdLineParser" m="findOptionByName" s="(Ljava/lang/String;)Lorg/kohsuke/args4j/spi/OptionHandler;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="aliases" s="()[Ljava/lang/String;" ent="5" xit="5" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.NamedOptionDef" m="name" s="()Ljava/lang/String;" ent="6" xit="6" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="hasMore" s="()Z" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="access$100" s="(Lorg/kohsuke/args4j/CmdLineParser$CmdLineImpl;I)V" ent="2" xit="2" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="proceed" s="(I)V" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.kohsuke.args4j.ClassParser" m="parse" s="(Ljava/lang/Object;Lorg/kohsuke/args4j/CmdLineParser;)V" ent="1" xit="1" err="0" dur="8000000" sos="64" mct="1" min="8000000" max="8000000">
<call c="org.kohsuke.args4j.spi.Setters" m="create" s="(Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/kohsuke/args4j/spi/Setter;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.CmdLineParser" m="addOption" s="(Lorg/kohsuke/args4j/spi/Setter;Lorg/kohsuke/args4j/Option;)V" ent="13" xit="13" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="checkOptionNotInMap" s="(Ljava/lang/String;)V" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.CmdLineParser" m="findOptionByName" s="(Ljava/lang/String;)Lorg/kohsuke/args4j/spi/OptionHandler;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="aliases" s="()[Ljava/lang/String;" ent="78" xit="78" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.NamedOptionDef" m="name" s="()Ljava/lang/String;" ent="78" xit="78" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.kohsuke.args4j.CmdLineParser" m="createOptionHandler" s="(Lorg/kohsuke/args4j/OptionDef;Lorg/kohsuke/args4j/spi/Setter;)Lorg/kohsuke/args4j/spi/OptionHandler;" ent="13" xit="13" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.kohsuke.args4j.spi.FieldSetter" m="getType" s="()Ljava/lang/Class;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.OptionDef" m="handler" s="()Ljava/lang/Class;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.spi.FieldSetter" m="isMultiValued" s="()Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.kohsuke.args4j.CmdLineParser$1" m="compare" s="(Ljava/lang/Object;Ljava/lang/Object;)I" ent="41" xit="41" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.CmdLineParser$1" m="compare" s="(Lorg/kohsuke/args4j/spi/OptionHandler;Lorg/kohsuke/args4j/spi/OptionHandler;)I" ent="41" xit="41" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="toString" s="()Ljava/lang/String;" ent="82" xit="82" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="name" s="()Ljava/lang/String;" ent="82" xit="82" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
<call c="tresc.benchmark.Configuration" m="readFromProperties" s="(Lorg/vagabond/util/PropertyWrapper;)V" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000">
<call c="org.vagabond.util.PropertyWrapper" m="resetPrefix" s="()V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$DESErrorType" m="values" s="()[Ltresc/benchmark/Constants$DESErrorType;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="setSchemaPathPrefix" s="(Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="setInstancePathPrefix" s="(Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$TrampXMLOutputSwitch" m="values" s="()[Ltresc/benchmark/Constants$TrampXMLOutputSwitch;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="genFileNames" s="(Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.PropertyWrapper" m="getLong" s="(Ljava/lang/String;J)J" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.PropertyWrapper" m="getProperty" s="(Ljava/lang/String;)Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.util.PropertyWrapper" m="setPrefix" s="(Ljava/lang/String;)V" ent="10" xit="10" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.PropertyWrapper" m="getInt" s="(Ljava/lang/String;I)I" ent="74" xit="74" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.vagabond.util.PropertyWrapper" m="getProperty" s="(Ljava/lang/String;)Ljava/lang/String;" ent="74" xit="74" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$ScenarioName" m="values" s="()[Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$DBOption" m="values" s="()[Ltresc/benchmark/Constants$DBOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.PropertyWrapper" m="getBool" s="(Ljava/lang/String;Z)Z" ent="11" xit="11" err="0" dur="0" sos="0" mct="1">
<call c="org.vagabond.util.PropertyWrapper" m="getProperty" s="(Ljava/lang/String;)Ljava/lang/String;" ent="11" xit="11" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.util.PropertyWrapper" m="getProperty" s="(Ljava/lang/String;)Ljava/lang/String;" ent="12" xit="12" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$OutputOption" m="values" s="()[Ltresc/benchmark/Constants$OutputOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.PropertyWrapper" m="getEnumProperty" s="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Enum;)Ljava/lang/Enum;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1">
<call c="tresc.benchmark.Constants$DataGenType" m="values" s="()[Ltresc/benchmark/Constants$DataGenType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$MappingLanguageType" m="values" s="()[Ltresc/benchmark/Constants$MappingLanguageType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.PropertyWrapper" m="getProperty" s="(Ljava/lang/String;)Ljava/lang/String;" ent="4" xit="4" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$ParameterName" m="values" s="()[Ltresc/benchmark/Constants$ParameterName;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="initArrays" s="()V" ent="1" xit="1" err="0" dur="1650000000" sos="2722500" mct="1" min="1650000000" max="1650000000">
<call c="tresc.benchmark.Constants$DESErrorType" m="values" s="()[Ltresc/benchmark/Constants$DESErrorType;" ent="3" xit="3" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$ScenarioName" m="values" s="()[Ltresc/benchmark/Constants$ScenarioName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$DBOption" m="values" s="()[Ltresc/benchmark/Constants$DBOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="initOptionsDefaults" s="()V" ent="1" xit="1" err="0" dur="1532000000" sos="2347024" mct="1" min="1532000000" max="1532000000">
<call c="tresc.benchmark.Constants$DESErrorType" m="values" s="()[Ltresc/benchmark/Constants$DESErrorType;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$DBOption" m="values" s="()[Ltresc/benchmark/Constants$DBOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$TrampXMLOutputSwitch" m="values" s="()[Ltresc/benchmark/Constants$TrampXMLOutputSwitch;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$OutputOption" m="values" s="()[Ltresc/benchmark/Constants$OutputOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="tresc.benchmark.Constants$TrampXMLOutputSwitch" m="values" s="()[Ltresc/benchmark/Constants$TrampXMLOutputSwitch;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$OutputOption" m="values" s="()[Ltresc/benchmark/Constants$OutputOption;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Constants$ParameterName" m="values" s="()[Ltresc/benchmark/Constants$ParameterName;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="initDoc" s="()V" ent="1" xit="1" err="0" dur="748000000" sos="559504" mct="1" min="748000000" max="748000000">
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="addNewSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="6000000" sos="36" mct="1" min="6000000" max="6000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="getMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="addNewTargetSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="getSchemas" s="()Lorg/vagabond/xmlmodel/SchemasType;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl$MappingScenarioImpl" m="addNewMappings" s="()Lorg/vagabond/xmlmodel/MappingsType;" ent="1" xit="1" err="0" dur="8000000" sos="64" mct="1" min="8000000" max="8000000"/>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="init" s="()V" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.xmlmodel.impl.MappingScenarioDocumentImpl" m="addNewMappingScenario" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument$MappingScenario;" ent="1" xit="1" err="0" dur="36000000" sos="1296" mct="1" min="36000000" max="36000000"/>
<call c="org.vagabond.xmlmodel.impl.SchemasTypeImpl" m="addNewSourceSchema" s="()Lorg/vagabond/xmlmodel/SchemaType;" ent="1" xit="1" err="0" dur="17000000" sos="289" mct="1" min="17000000" max="17000000"/>
<call c="org.vagabond.xmlmodel.MappingScenarioDocument$Factory" m="newInstance" s="()Lorg/vagabond/xmlmodel/MappingScenarioDocument;" ent="1" xit="1" err="0" dur="651000000" sos="423801" mct="1" min="651000000" max="651000000">
<call c="schemaorg_apache_xmlbeans.system.s6A572AB33C931CEB9392B557491BDD9A.TypeSystemHolder" m="loadTypeSystem" s="()Lorg/apache/xmlbeans/SchemaTypeSystem;" ent="1" xit="1" err="0" dur="46000000" sos="2116" mct="1" min="46000000" max="46000000">
<call c="schemaorg_apache_xmlbeans.system.s6A572AB33C931CEB9392B557491BDD9A.TypeSystemHolder" m="class$" s="(Ljava/lang/String;)Ljava/lang/Class;" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
<call c="smark.support.MappingScenario" m="init" s="()V" ent="1" xit="1" err="0" dur="142000000" sos="20164" mct="1" min="142000000" max="142000000"/>
<call c="tresc.benchmark.STBenchmark" m="parseArgs" s="([Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="193000000" sos="37249" mct="1" min="193000000" max="193000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="registerHandler" s="(Ljava/lang/Class;Ljava/lang/Class;)V" ent="21" xit="21" err="0" dur="24000000" sos="444" mct="1" min="0" max="21000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="getConstructor" s="(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" ent="21" xit="21" err="0" dur="24000000" sos="444" mct="1" min="0" max="21000000"/>
</call>
<call c="org.vagabond.util.LoggerUtil" m="arrayToString" s="([Ljava/lang/String;)Ljava/lang/String;" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000">
<call c="org.vagabond.util.LoggerUtil" m="arrayToString" s="([Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000"/>
</call>
<call c="org.kohsuke.args4j.CmdLineParser" m="parseArgument" s="([Ljava/lang/String;)V" ent="1" xit="1" err="0" dur="3000000" sos="9" mct="1" min="3000000" max="3000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="isOption" s="(Ljava/lang/String;)Z" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.OptionDef" m="required" s="()Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.spi.StringOptionHandler" m="parseArguments" s="(Lorg/kohsuke/args4j/spi/Parameters;)I" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000">
<call c="org.kohsuke.args4j.spi.FieldSetter" m="addValue" s="(Ljava/lang/Object;)V" ent="1" xit="1" err="0" dur="1000000" sos="1" mct="1" min="1000000" max="1000000"/>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="getParameter" s="(I)Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="getCurrentToken" s="()Ljava/lang/String;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.CmdLineParser" m="findOptionByName" s="(Ljava/lang/String;)Lorg/kohsuke/args4j/spi/OptionHandler;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="aliases" s="()[Ljava/lang/String;" ent="5" xit="5" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.NamedOptionDef" m="name" s="()Ljava/lang/String;" ent="6" xit="6" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="hasMore" s="()Z" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="access$100" s="(Lorg/kohsuke/args4j/CmdLineParser$CmdLineImpl;I)V" ent="2" xit="2" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.CmdLineParser$CmdLineImpl" m="proceed" s="(I)V" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.kohsuke.args4j.ClassParser" m="parse" s="(Ljava/lang/Object;Lorg/kohsuke/args4j/CmdLineParser;)V" ent="1" xit="1" err="0" dur="63000000" sos="3969" mct="1" min="63000000" max="63000000">
<call c="org.kohsuke.args4j.spi.Setters" m="create" s="(Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/kohsuke/args4j/spi/Setter;" ent="13" xit="13" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000"/>
<call c="org.kohsuke.args4j.CmdLineParser" m="addOption" s="(Lorg/kohsuke/args4j/spi/Setter;Lorg/kohsuke/args4j/Option;)V" ent="13" xit="13" err="0" dur="4000000" sos="4" mct="1" min="0" max="1000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="checkOptionNotInMap" s="(Ljava/lang/String;)V" ent="13" xit="13" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.kohsuke.args4j.CmdLineParser" m="findOptionByName" s="(Ljava/lang/String;)Lorg/kohsuke/args4j/spi/OptionHandler;" ent="13" xit="13" err="0" dur="2000000" sos="2" mct="1" min="0" max="1000000">
<call c="org.kohsuke.args4j.NamedOptionDef" m="aliases" s="()[Ljava/lang/String;" ent="78" xit="78" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.NamedOptionDef" m="name" s="()Ljava/lang/String;" ent="78" xit="78" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.kohsuke.args4j.CmdLineParser" m="createOptionHandler" s="(Lorg/kohsuke/args4j/OptionDef;Lorg/kohsuke/args4j/spi/Setter;)Lorg/kohsuke/args4j/spi/OptionHandler;" ent="13" xit="13" err="0" dur="1000000" sos="1" mct="1" min="0" max="1000000">
<call c="org.kohsuke.args4j.spi.FieldSetter" m="getType" s="()Ljava/lang/Class;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
<call c="org.kohsuke.args4j.OptionDef" m="handler" s="()Ljava/lang/Class;" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
<call c="org.kohsuke.args4j.spi.FieldSetter" m="isMultiValued" s="()Z" ent="13" xit="13" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
<call c="org.kohsuke.args4j.CmdLineParser$1" m="compare" s="(Ljava/lang/Object;Ljava/lang/Object;)I" ent="41" xit="41" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.CmdLineParser$1" m="compare" s="(Lorg/kohsuke/args4j/spi/OptionHandler;Lorg/kohsuke/args4j/spi/OptionHandler;)I" ent="41" xit="41" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="toString" s="()Ljava/lang/String;" ent="82" xit="82" err="0" dur="0" sos="0" mct="1">
<call c="org.kohsuke.args4j.NamedOptionDef" m="name" s="()Ljava/lang/String;" ent="82" xit="82" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
<call c="org.vagabond.mapping.model.MapScenarioHolder" m="init" s="()V" ent="2" xit="2" err="0" dur="0" sos="0" mct="1"/>
<call c="tresc.benchmark.Configuration" m="setDefaultConfiguration" s="()V" ent="1" xit="1" err="0" dur="2000000" sos="4" mct="1" min="2000000" max="2000000"/>
<call c="org.vagabond.benchmark.model.TrampXMLModel" m="initIndex" s="()V" ent="1" xit="1" err="0" dur="12000000" sos="144" mct="1" min="12000000" max="12000000"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/String;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.explanation.model.ExplanationFactory" m="newExplanationSet" s="()Lorg/vagabond/explanation/model/IExplanationSet;" ent="1" xit="1" err="0" dur="42000000" sos="1764" mct="1" min="42000000" max="42000000">
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.explanation.model.SimpleExplanationSet" m="init" s="()V" ent="1" xit="1" err="0" dur="29000000" sos="841" mct="1" min="29000000" max="29000000">
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.explanation.marker.MarkerFactory" m="newMarkerSet" s="()Lorg/vagabond/explanation/marker/IMarkerSet;" ent="1" xit="1" err="0" dur="2000000" sos="4" mct="1" min="2000000" max="2000000">
<call c="org.vagabond.util.LogProviderHolder" m="getInstance" s="()Lorg/vagabond/util/LogProviderHolder;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
<call c="org.vagabond.util.LogProviderHolder" m="getLogger" s="(Ljava/lang/Class;)Lorg/apache/log4j/Logger;" ent="1" xit="1" err="0" dur="0" sos="0" mct="1"/>
</call>
</call>
</call>
</call>
</view>
<!-- file written in 192000000 nanos -->
</jrat-tree>
